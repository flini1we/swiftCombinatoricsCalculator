//
//  CombinatoricsModelData.swift
//  mathHW
//
//  Created by Данил Забинский on 08.11.2024.
//

import Foundation

class CombinatoricsModelData {
    typealias dataType = String
    let noSelection: dataType = "Не выбрано"
    let titleLabelText: dataType = "Что вы хотите подсчитать?"
    let documentationLabel: dataType = "Документация"
    let invalidDataMessage: (dataType, dataType) = ("Некорректные данные", "Убедитесь что вы выбрали оба поля")
    let selectionTypes: [dataType] = ["Размещение", "Перестановка", "Сочетание"]
    let selectionRepetition: [dataType] = ["С повторениями", "Без повторений"]
    lazy var selectedType: (dataType, dataType) = (noSelection, noSelection)
    
    func obtatinSelectedType() -> String {
        selectedType.0 + " " + selectedType.1
    }
    
    func contains(val: dataType) -> Bool {
        self.selectedType.0 == val || self.selectedType.1 == val
    }
    
    func obtainDocumentation() -> String {
        """
        - Размещения: порядок важен. 
        - Перестановки: упорядочивание всех объектов, порядок важен.
        - Сочетания: порядок не важен.
                    
        - Без повторений: каждый объект может быть выбран только один раз.
        - С повторениями: объект может быть выбран несколько раз.
                    
        1.1 Размещения Без повторения
        Когда использовать: Когда вам нужно выбрать и упорядочить k объектов из n уникальных объектов, и ни один объект не может быть выбран более одного раза.
                    
        1.2 Размещения С повторениями
        Когда использовать: Когда вы выбираете и упорядочиваете k объектов из n доступных объектов, но один и тот же объект может быть выбран несколько раз.
                    
        2.1 Перестановки Без повторения
        Когда использовать: Когда вам нужно упорядочить n уникальных объектов, и ни один объект не может быть выбран более одного раза.
                    
        2.2 Перестановки С повторениями
        Когда использовать: Когда вы упорядочиваете n объектов, где некоторые из объектов могут повторяться (и это важно для порядка).
                    
        3.1 Сочетания Без повторения
        Когда использовать: Когда выбираете k объектов из n уникальных объектов и порядок не важен (объекты не могут повторяться).
        Примеры:
        - Формирование команды из группы людей (например, выбрать 3 человека из 10).
        - Отбор номинаций для премии, где порядок не имеет значения.
                    
        3.2 Сочетания С повторениями
        Когда использовать: Когда выбираете k объектов из n доступных объектов, и порядок не важен, и один и тот же объект может быть выбран несколько раз.
        """
    }
}
